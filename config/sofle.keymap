/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
       &kp ESC            &kp N1    &kp N2        &kp N3  &kp N4  &kp N5                            &kp N6      &kp N7     &kp N8          &kp N9          &kp N0    &kp BACKSPACE
       &kp TAB             &kp Q     &kp W         &kp E   &kp R   &kp T                             &kp Y       &kp U      &kp I           &kp O           &kp P        &kp MINUS
&kp LEFT_SHIFT             &kp A     &kp S         &kp D   &kp F   &kp G                             &kp H       &kp J      &kp K           &kp L    &kp UP_ARROW        &kp EQUAL
  &kp LEFT_GUI  &kp LEFT_CONTROL     &kp Z         &kp X   &kp C   &kp V  &kp C_MUTE      &none      &kp B       &kp N      &kp M  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
                                  &kp HOME  &kp LEFT_ALT   &mo 2   &mo 1   &kp SPACE  &kp ENTER  &kp COMMA  &kp PERIOD  &kp SLASH         &kp END
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PAGE_UP PG_DN>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp GRAVE           &kp F1       &kp F2            &kp F3             &kp F4                &kp F5                     &kp F6         &kp F7             &kp F8                &kp F9                &kp F10         &kp F11
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN          &kp HASH         &kp DOLLAR           &kp PERCENT                  &kp CARET  &kp AMPERSAND       &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
   &trans            &none        &none  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH                      &none  &kp SEMICOLON            &kp SQT                 &none                 &trans        &kp PLUS
   &trans           &trans       &trans    &kp LEFT_BRACE    &kp RIGHT_BRACE              &kp PIPE  &trans  &trans      &none      &kp COLON  &kp DOUBLE_QUOTES                &trans                 &trans          &trans
                                 &trans            &trans             &trans                &trans  &trans  &trans     &trans  &kp LESS_THAN   &kp GREATER_THAN          &kp QUESTION
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
      &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &kp K_CALCULATOR        &kp SLASH     &kp ASTERISK  &kp MINUS  &trans  &trans
          &trans        &trans        &trans     &kp PSCRN        &trans        &trans                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9      &none  &trans  &trans
  &kp LEFT_SHIFT    &kp K_UNDO     &kp K_CUT    &kp K_COPY   &kp K_PASTE        &trans                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6   &kp PLUS  &trans  &trans
&kp LEFT_CONTROL        &trans        &trans        &trans        &trans        &trans  &trans  &trans   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp ENTER  &trans  &trans
                                      &trans  &kp LEFT_ALT        &trans        &trans  &trans  &trans   &kp KP_NUMBER_0            &none       &kp PERIOD     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        // ------------------------------------------------------------------------------------------------------------
        // |BTCLR | BT1   | BT2   |  BT3  |  BT4  |  BT5  |                |      |      |       |      |       |       |
        // |EXTPWR|RGB_HUD|RGB_HUI|RGB_SAD|RGB_SAI|RGB_EFF|                |      |      |       |      |       |       |
        // |      |RGB_BRD|RGB_BRI|       |       |       |                |      |      |       |      |       |       |
        // |      |       |       |       |       |       |RGB_TOG| |      |      |      |       |      |       |       |
        //                |       |       |       |       |       | |      |      |      |       |      |

        Adjust_layer {
            bindings = <
                     &bt BT_CLR     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                          &none  &kp K_CALCULATOR      &kp FSLH  &kp ASTERISK  &kp MINUS  &none
&ext_power EXT_POWER_TOGGLE_CMD  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                          &none      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9      &none  &none
                          &none  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI            &none            &none            &none                          &none      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6   &kp PLUS  &none
                          &none            &none            &none            &none            &none            &none  &rgb_ug RGB_TOG  &none  &none      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER  &none
                                                            &none            &none            &none            &none            &none  &none  &none      &kp NUMBER_0    &kp PERIOD         &none
            >;
        };
    };
};
